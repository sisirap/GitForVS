using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EulerSolutions
{
    class ProblemHelper
    {
        public int QuestionOne(int upperLimit)
        {
            int sum = 0;
            for (int i = 1; i < upperLimit; i++)
            {
                if (i % 3 == 0 || i % 5 == 0)
                {
                    sum += i;
                }
            }
            return sum;
        }

        public int QuestionOneLinq(int upperLimit)
        {
            return Enumerable.Range(1, upperLimit).Where(x => x % 3 == 0 || x % 5 == 0).Sum();
        }


        // Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

        //1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        //By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

        public int QuestionTwo(int upperLimit)
        {
            List<int> fibbVals = new List<int>();
            int evenSum = 0;
            int currentVal = 1;
            int prevVal =0;

            while(prevVal+ currentVal <= upperLimit)
            {
                fibbVals.Add(currentVal + prevVal);
                prevVal = currentVal;
                currentVal = fibbVals[fibbVals.Count - 1];
                if (currentVal % 2 == 0)
                {
                    evenSum += currentVal;
                }
            }
            return evenSum;
        }
    }
}
